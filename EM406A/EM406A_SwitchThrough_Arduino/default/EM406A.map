Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

sys                 0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD SoftUART.o
LOAD UART.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9fc
 *(.vectors)
 .vectors       0x00000000       0x68 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000084        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000008c        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
                0x0000008c                __vector_22
                0x0000008c                __vector_1
                0x0000008c                __vector_24
                0x0000008c                __vector_12
                0x0000008c                __bad_interrupt
                0x0000008c                __vector_6
                0x0000008c                __vector_3
                0x0000008c                __vector_23
                0x0000008c                __vector_25
                0x0000008c                __vector_11
                0x0000008c                __vector_13
                0x0000008c                __vector_17
                0x0000008c                __vector_7
                0x0000008c                __vector_5
                0x0000008c                __vector_4
                0x0000008c                __vector_21
                0x0000008c                __vector_15
                0x0000008c                __vector_8
                0x0000008c                __vector_14
                0x0000008c                __vector_10
                0x0000008c                __vector_20
 .text          0x00000090       0x4a main.o
                0x00000090                main
                0x000000bc                init
 .text          0x000000da      0x624 SoftUART.o
                0x000000da                SoftUART_Init
                0x0000015e                SoftUART_GetByte
                0x00000170                SoftUART_RxBufferEmpty
                0x0000018c                SoftUART_PutByte
                0x000001a6                __vector_2
                0x0000021a                timer2_start
                0x0000024e                timer2_stop
                0x00000280                __vector_9
                0x000003c6                timer0_start
                0x000003fa                timer0_stop
                0x0000042c                timer0_active
                0x00000444                __vector_16
                0x000005b6                IncrPtr
                0x000005de                PutToRxBuffer
                0x00000622                GetFromRxBuffer
                0x00000668                PutToTxBuffer
                0x000006b8                GetFromTxBuffer
 .text          0x000006fe      0x2fa UART.o
                0x000006fe                UART_Init
                0x00000750                UART_GetByte
                0x00000762                UART_RxBufferEmpty
                0x0000077e                __vector_18
                0x000007e4                UART_WriteBytes
                0x0000083e                __vector_19
                0x000008bc                HardIncrPtr
                0x000008e4                HardPutToRxBuffer
                0x00000928                HardGetFromRxBuffer
                0x0000096e                HardPutToTxBuffer
                0x000009b2                HardGetFromTxBuffer
 .text          0x000009f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x000009f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x000009f8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000009f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000009f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x000009f8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x000009f8                _exit
                0x000009f8                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009f8        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000009fc                _etext = .

.data           0x00800100        0x0 load address 0x000009fc
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 SoftUART.o
 .data          0x00800100        0x0 UART.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100      0x133
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800100        0x0 main.o
 .bss           0x00800100      0x10c SoftUART.o
 .bss           0x0080020c       0x26 UART.o
 .bss           0x00800232        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x00800232        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800232        0x1 main.o
                0x00800232                sys
                0x00800233                PROVIDE (__bss_end, .)
                0x000009fc                __data_load_start = LOADADDR (.data)
                0x000009fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800233        0x0
                0x00800233                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800233                PROVIDE (__noinit_end, .)
                0x00800233                _end = .
                0x00800233                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 SoftUART.o
 .debug_aranges
                0x00000040       0x20 UART.o

.debug_pubnames
                0x00000000      0x257
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x2c main.o
 .debug_pubnames
                0x0000002c      0x143 SoftUART.o
 .debug_pubnames
                0x0000016f       0xe8 UART.o

.debug_info     0x00000000      0x890
 *(.debug_info)
 .debug_info    0x00000000      0x125 main.o
 .debug_info    0x00000125      0x41f SoftUART.o
 .debug_info    0x00000544      0x34c UART.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x3bb
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xdc main.o
 .debug_abbrev  0x000000dc      0x18c SoftUART.o
 .debug_abbrev  0x00000268      0x153 UART.o

.debug_line     0x00000000      0x944
 *(.debug_line)
 .debug_line    0x00000000      0x13a main.o
 .debug_line    0x0000013a      0x538 SoftUART.o
 .debug_line    0x00000672      0x2d2 UART.o

.debug_frame    0x00000000      0x210
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 main.o
 .debug_frame   0x00000030      0x120 SoftUART.o
 .debug_frame   0x00000150       0xc0 UART.o

.debug_str      0x00000000      0x2e6
 *(.debug_str)
 .debug_str     0x00000000       0xd3 main.o
                                0x10f (size before relaxing)
 .debug_str     0x000000d3      0x167 SoftUART.o
                                0x2a6 (size before relaxing)
 .debug_str     0x0000023a       0xac UART.o
                                0x209 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(EM406A.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0xa0
 .debug_pubtypes
                0x00000000       0x31 main.o
 .debug_pubtypes
                0x00000031       0x31 SoftUART.o
 .debug_pubtypes
                0x00000062       0x3e UART.o

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 main.o
