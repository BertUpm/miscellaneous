Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

sys                 0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD SoftUART.o
LOAD UART.o
LOAD NMEA_Parser.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xe5e
 *(.vectors)
 .vectors       0x00000000       0x68 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_20
 .text          0x000000a6      0x4cc main.o
                0x000000a6                main
                0x00000140                init
                0x0000015e                tx_rmc
                0x0000050e                IsEqual
 .text          0x00000572      0x384 SoftUART.o
                0x00000572                SoftUART_Init
                0x000005f6                SoftUART_GetByte
                0x00000608                SoftUART_RxBufferEmpty
                0x00000624                __vector_2
                0x00000698                timer2_start
                0x000006cc                timer2_stop
                0x000006fe                __vector_9
                0x00000844                IncrPtr
                0x0000086c                PutToRxBuffer
                0x000008b0                GetFromRxBuffer
 .text          0x000008f6      0x312 UART.o
                0x000008f6                UART_Init
                0x00000948                UART_GetByte
                0x0000095a                UART_RxBufferEmpty
                0x00000976                UART_TxBufferEmpty
                0x00000992                __vector_18
                0x000009f8                UART_WriteBytes
                0x00000a52                __vector_19
                0x00000ad0                HardIncrPtr
                0x00000af8                HardPutToRxBuffer
                0x00000b3c                HardGetFromRxBuffer
                0x00000b82                HardPutToTxBuffer
                0x00000bc2                HardGetFromTxBuffer
 .text          0x00000c08      0x252 NMEA_Parser.o
                0x00000c08                parse_data
                0x00000cd8                get_RMC_Data
                0x00000d0e                parse_rmc_data
                0x00000e2e                IsRMC
 .text          0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .text          0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000e5a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000e5a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000e5a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x00000e5a                _exit
                0x00000e5a                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000e5a        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000e5e                _etext = .

.data           0x00800100       0x34 load address 0x00000e5e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100       0x34 main.o
 .data          0x00800134        0x0 SoftUART.o
 .data          0x00800134        0x0 UART.o
 .data          0x00800134        0x0 NMEA_Parser.o
 .data          0x00800134        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x00800134        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .data          0x00800134        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800134                . = ALIGN (0x2)
                0x00800134                _edata = .
                0x00800134                PROVIDE (__data_end, .)

.bss            0x00800134       0xe5
                0x00800134                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800134        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800134        0x0 main.o
 .bss           0x00800134       0x86 SoftUART.o
 .bss           0x008001ba       0x26 UART.o
 .bss           0x008001e0       0x38 NMEA_Parser.o
 .bss           0x00800218        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x00800218        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800218        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800218        0x1 main.o
                0x00800218                sys
                0x00800219                PROVIDE (__bss_end, .)
                0x00000e5e                __data_load_start = LOADADDR (.data)
                0x00000e92                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800219        0x0
                0x00800219                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800219                PROVIDE (__noinit_end, .)
                0x00800219                _end = .
                0x00800219                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 SoftUART.o
 .debug_aranges
                0x00000040       0x20 UART.o
 .debug_aranges
                0x00000060       0x20 NMEA_Parser.o

.debug_pubnames
                0x00000000      0x256
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x43 main.o
 .debug_pubnames
                0x00000043       0xc5 SoftUART.o
 .debug_pubnames
                0x00000108       0xff UART.o
 .debug_pubnames
                0x00000207       0x4f NMEA_Parser.o

.debug_info     0x00000000      0xc4d
 *(.debug_info)
 .debug_info    0x00000000      0x342 main.o
 .debug_info    0x00000342      0x2bf SoftUART.o
 .debug_info    0x00000601      0x375 UART.o
 .debug_info    0x00000976      0x2d7 NMEA_Parser.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x531
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x16a main.o
 .debug_abbrev  0x0000016a      0x157 SoftUART.o
 .debug_abbrev  0x000002c1      0x153 UART.o
 .debug_abbrev  0x00000414      0x11d NMEA_Parser.o

.debug_line     0x00000000      0xd0f
 *(.debug_line)
 .debug_line    0x00000000      0x3c5 main.o
 .debug_line    0x000003c5      0x350 SoftUART.o
 .debug_line    0x00000715      0x2fa UART.o
 .debug_line    0x00000a0f      0x300 NMEA_Parser.o

.debug_frame    0x00000000      0x220
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 main.o
 .debug_frame   0x00000050       0xb0 SoftUART.o
 .debug_frame   0x00000100       0xd0 UART.o
 .debug_frame   0x000001d0       0x50 NMEA_Parser.o

.debug_str      0x00000000      0x34a
 *(.debug_str)
 .debug_str     0x00000000      0x149 main.o
                                0x185 (size before relaxing)
 .debug_str     0x00000149       0xcb SoftUART.o
                                0x1ef (size before relaxing)
 .debug_str     0x00000214       0xd6 UART.o
                                0x21f (size before relaxing)
 .debug_str     0x000002ea       0x60 NMEA_Parser.o
                                0x1aa (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(EM406A_Parser.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0xe5
 .debug_pubtypes
                0x00000000       0x3b main.o
 .debug_pubtypes
                0x0000003b       0x31 SoftUART.o
 .debug_pubtypes
                0x0000006c       0x3e UART.o
 .debug_pubtypes
                0x000000aa       0x3b NMEA_Parser.o
